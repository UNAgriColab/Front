Index: src/pages/BuyBuyerProduct.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div\r\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-60\"\r\n      >\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h1 class=\"title\">{{ product.name }}</h1>\r\n            <p class=\"category\">{{ product.user }}</p>\r\n          </md-card-header>\r\n\r\n        </md-card>\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h4 class=\"title\">Descripción del producto</h4>\r\n            <p class=\"category\">\r\n              Detalles de la oferta seleccionada\r\n            </p>\r\n          </md-card-header>\r\n          <div\r\n            class=\"md-layout-item md-size-100 md-size-50\"\r\n            style=\"margin-top: 15px\"\r\n          >\r\n            <span v-if=\"product.quantity > 20\" class=\"stock in-stock\">\r\n              Quedan {{ product.quantity }} unidades\r\n            </span>\r\n            <span\r\n              v-else-if=\"product.quantity > 0 && product.quantity < 20\"\r\n              class=\"stock low-stock\"\r\n            >\r\n              quedan {{ product.quantity }} unidades\r\n            </span>\r\n            <span v-else class=\"stock out-of-stock\">\r\n              No quedan unidades\r\n            </span>\r\n          </div>\r\n          <div\r\n            class=\"md-layout-item md-size-100 md-size-50\"\r\n            style=\"margin-top: 15px\"\r\n          >\r\n            <h4 class=\"title\">Precio: {{ product.price }}</h4>\r\n          </div>\r\n          <div class=\"md-layout-item md-size-100 md-size-100\">\r\n            <p class=\"category\">\r\n              {{ product.description }}\r\n            </p>\r\n          </div>\r\n        </md-card>\r\n      </div>\r\n      <div\r\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-50\"\r\n      >\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h4 class=\"title\">Finaliza tu compra</h4>\r\n            <p class=\"category\">\r\n              Revisa muy bien los detalles de tu pedido antes de dar clic en el\r\n              botón Comprar\r\n            </p>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <div class=\"md-layout\">\r\n              <div class=\"md-layout-item md-small-size-100 md-size-50\">\r\n                <md-field>\r\n                  <label>Numero de unidades</label>\r\n                  <md-input\r\n                    id=\"numberOfUnits\"\r\n                    type=\"Number\"\r\n                    min=\"1\"\r\n                    required\r\n                    v-model.number=\"product.numberOfUnits\"\r\n                    name=\"numberOfUnits\"\r\n                  >\r\n                  </md-input>\r\n                </md-field>\r\n              </div>\r\n              <div class=\"md-layout-item md-small-size-100 md-size-50\">\r\n                <span v-if=\"product.presentation === 1\">\r\n                  Gramos pedidos.\r\n                </span>\r\n                <span v-if=\"product.presentation === 2\">\r\n                  Libras pedidas.\r\n                </span>\r\n                <span v-if=\"product.presentation === 3\">\r\n                  Kilogramos pedidos.\r\n                </span>\r\n                <span v-if=\"product.presentation === 4\">\r\n                  Arrobas pedidas.\r\n                </span>\r\n                <span v-if=\"product.presentation === 5\">\r\n                  Bultos pedidos.\r\n                </span>\r\n              </div>\r\n              <div class=\"md-layout-item md-size-100 md-size-33\">\r\n                <h4 class=\"title\">Precio total: {{ product.price }}</h4>\r\n              </div>\r\n              <div class=\"md-layout-item md-small-size-100 md-size-100\">\r\n                <md-field>\r\n                  <label>Descripción</label>\r\n                  <md-textarea v-model=\"product.description2\"></md-textarea>\r\n                  <md-icon>description</md-icon>\r\n                </md-field>\r\n              </div>\r\n              <div class=\"md-layout-item md-size-100 md-size-33\">\r\n                <h3 class=\"title\">Precio final: {{ product.price }}</h3>\r\n              </div>\r\n              <div class=\"md-layout-item md-size-100 text-right\">\r\n                <md-button\r\n                  v-on:click=\"saveRequest\"\r\n                  class=\"md-raised md-success\"\r\n                >\r\n                  <md-icon>queue</md-icon> Comprar\r\n                </md-button>\r\n              </div>\r\n            </div>\r\n          </md-card-content>\r\n        </md-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../http-common\";\r\n\r\nexport default {\r\n  name: \"product\",\r\n  data() {\r\n    return {\r\n      product: {\r\n        id: \"\",\r\n        name: \"\",\r\n        user: \"\",\r\n        price: 0,\r\n        quantity: 0,\r\n        numberOfUnits: 0,\r\n        description: \"\",\r\n        presentation: \"\",\r\n        userEmail: \"\",\r\n        totalPrice: 0,\r\n        description2: \"\",\r\n        state: 0,\r\n        canceled: false,\r\n        path: \"\"\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.storage();\r\n    this.leerAPI();\r\n  },\r\n  methods: {\r\n    /* eslint-disable no-console */\r\n    storage() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.product.userEmail = this.aux.email;\r\n      }\r\n      if(localStorage.getItem(\"buyerOrderId\")){\r\n        this.product.path = localStorage.getItem(\"buyerOrderId\");\r\n      }\r\n    },\r\n    precioFinal() {\r\n\r\n    },\r\n    leerAPI() {\r\n      http\r\n        .get(\"/v1/offer/\" + this.product.path, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          this.product.price = response.data.pricePresentation;\r\n          this.product.user = response.data.userEmail;\r\n          this.product.name = response.data.productName;\r\n          this.product.quantity = response.data.minQuantity;\r\n          this.product.presentation = response.data.presentation;\r\n          this.product.description = response.data.description;\r\n          this.product.state = response.data.state;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    saveRequest() {\r\n      const data = {\r\n        userEmail: this.product.userEmail,\r\n        offerReference: this.product.path,\r\n        numberOfUnits: this.product.numberOfUnits,\r\n        description: this.product.description2\r\n      };\r\n      http\r\n        .post(\"/v1/order\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      this.submitted = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/BuyBuyerProduct.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/pages/BuyBuyerProduct.vue	(date 1589404785252)
@@ -9,7 +9,6 @@
             <h1 class="title">{{ product.name }}</h1>
             <p class="category">{{ product.user }}</p>
           </md-card-header>
-
         </md-card>
         <md-card>
           <md-card-header data-background-color="green">
@@ -158,13 +157,12 @@
         this.token = this.aux.token;
         this.product.userEmail = this.aux.email;
       }
-      if(localStorage.getItem("buyerOrderId")){
+      /*Recupera el ID de una oferta para realizar una solicitud de compra*/
+      if (localStorage.getItem("buyerOrderId")) {
         this.product.path = localStorage.getItem("buyerOrderId");
       }
     },
-    precioFinal() {
-
-    },
+    precioFinal() {},
     leerAPI() {
       http
         .get("/v1/offer/" + this.product.path, {
@@ -207,6 +205,7 @@
           console.log(e);
         });
       this.submitted = true;
+      localStorage.removeItem("buyerOrderId");
     }
   }
 };
Index: src/pages/SellerEditMyOffer.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"content\">\r\n    <md-card>\r\n      <div class=\"md-layout-item md-small-size-100 md-size-50\">\r\n        <md-field>\r\n          <label for=\"path\"> Id de oferta </label>\r\n          <md-icon>mail_outline</md-icon>\r\n          <md-input\r\n            id=\"path\"\r\n            type=\"text\"\r\n            placeholder=\"Id de oferta\"\r\n            v-model=\"path\"\r\n          >\r\n          </md-input>\r\n        </md-field>\r\n      </div>\r\n      <div class=\"md-layout-item md-small-size-100 md-size-50 text-center\">\r\n        <md-button\r\n          type=\"submit\"\r\n          class=\"md-raised md-success\"\r\n          v-on:click=\"getOffer\"\r\n        >\r\n          Consultar\r\n        </md-button>\r\n      </div>\r\n    </md-card>\r\n\r\n    <md-card>\r\n      <md-card-header data-background-color=\"green\">\r\n        <h4 class=\"title\">Edita tu producto</h4>\r\n        <p class=\"category\">\r\n          Información necesaria para la edición de una oferta\r\n        </p>\r\n      </md-card-header>\r\n\r\n      <md-card-content>\r\n        <div class=\"md-layout\">\r\n          <div class=\"md-layout-item md-small-size-100 md-size-100\">\r\n            <md-field>\r\n              <label for=\"user\">Usuario</label><br />\r\n              <md-input v-model=\"offer.userEmail\" disabled></md-input>\r\n            </md-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"md-layout\">\r\n          <!-- Layout item list-->\r\n          <div class=\"md-layout-item md-small-size-100 md-size-100\">\r\n            <md-field>\r\n              <label for=\"productName\">Tipo de producto</label>\r\n              <md-select\r\n                v-model=\"offer.productName\"\r\n                name=\"productName\"\r\n                id=\"productName\"\r\n                md-dense\r\n                disabled\r\n              >\r\n                <md-optgroup label=\"Hortalizas\">\r\n                  <md-option value=\"ACELGA\">ACELGA</md-option>\r\n                  <md-option value=\"CEBOLLA CABEZONA BLANCA\">\r\n                    CEBOLLA CABEZONA BLANCA\r\n                  </md-option>\r\n                </md-optgroup>\r\n\r\n                <md-optgroup label=\"Frutas\">\r\n                  <md-option value=\"AGUACATE HASS\">AGUACATE HASS</md-option>\r\n                  <md-option value=\"BANANO CRIOLLO\">BANANO CRIOLLO</md-option>\r\n                  <md-option value=\"CURUBA BOYACENCE\">\r\n                    CURUBA BOYACENCE\r\n                  </md-option>\r\n                  <md-option value=\"TOMATE DE ARBOL\">TOMATE DE ARBOL</md-option>\r\n                </md-optgroup>\r\n\r\n                <md-optgroup label=\"Tuberculos\">\r\n                  <md-option value=\"PAPA CRIOLLA LAVADA\">\r\n                    PAPA CRIOLLA LAVADA\r\n                  </md-option>\r\n                  <md-option value=\"PAPA PASTUSA\">PAPA PASTUSA</md-option>\r\n                  <md-option value=\"PAPA R12 INDUSTRIAL\">\r\n                    PAPA R12 INDUSTRIAL\r\n                  </md-option>\r\n                </md-optgroup>\r\n              </md-select>\r\n            </md-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"md-layout\">\r\n          <!-- Layout item -->\r\n          <div class=\"md-layout-item md-small-size-100 md-size-33\">\r\n            <md-field>\r\n              <!-- label for=\"unit\">Unidad</label -->\r\n              <label for=\"presentation\">Unidad</label>\r\n              <md-select\r\n                v-model=\"offer.presentation\"\r\n                name=\"presentation\"\r\n                id=\"presentation\"\r\n                md-dense\r\n                disabled\r\n              >\r\n                <md-option value=\"1\">Gramos</md-option>\r\n                <md-option value=\"2\">Libras</md-option>\r\n                <md-option value=\"3\">Kilogramos</md-option>\r\n                <md-option value=\"4\">Arrobas</md-option>\r\n                <md-option value=\"5\">Bultos(50 Kg)</md-option>\r\n              </md-select>\r\n            </md-field>\r\n          </div>\r\n          <div class=\"md-layout-item md-small-size-100 md-size-33\">\r\n            <md-field>\r\n              <label for=\"minQuantity\">Numero mínimo de unidades</label>\r\n              <md-input\r\n                id=\"minQuantity\"\r\n                v-model=\"offer.minQuantity\"\r\n                min=\"1\"\r\n                type=\"number\"\r\n                placeholder=\"unidades\"\r\n              ></md-input>\r\n            </md-field>\r\n          </div>\r\n          <div class=\"md-layout-item md-small-size-100 md-size-33\">\r\n            <md-field>\r\n              <label>Precio por unidad</label>\r\n              <md-input\r\n                v-model=\"offer.pricePresentation\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n              ></md-input>\r\n              <md-icon>attach_money</md-icon>\r\n            </md-field>\r\n          </div>\r\n          <div class=\"md-layout-item md-size-100\">\r\n            <md-field maxlength=\"5\">\r\n              <label>Descripción</label>\r\n              <md-textarea v-model=\"offer.description\"></md-textarea>\r\n              <md-icon>description</md-icon>\r\n            </md-field>\r\n          </div>\r\n          <div class=\"md-layout-item md-size-100 text-right\">\r\n            <md-button\r\n              v-on:click=\"deleteOffer\"\r\n              class=\"md-raised md-danger\"\r\n              type=\"submit\"\r\n              style=\"margin-right: 10px\"\r\n            >\r\n              <md-icon>delete</md-icon>\r\n              Eliminar\r\n            </md-button>\r\n            <md-button\r\n              v-on:click=\"updateOffer\"\r\n              class=\"md-raised md-success\"\r\n              type=\"submit\"\r\n            >\r\n              <md-icon>create</md-icon>\r\n              Editar\r\n            </md-button>\r\n          </div>\r\n        </div>\r\n      </md-card-content>\r\n    </md-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../http-common\";\r\nexport default {\r\n  name: \"offer\",\r\n  data() {\r\n    return {\r\n      offer: {\r\n        userEmail: \"\",\r\n        productName: \"\",\r\n        presentation: \"\",\r\n        minQuantity: 0,\r\n        pricePresentation: 0,\r\n        description: \"\",\r\n        id: \"\",\r\n        path: \"\"\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.storage();\r\n  },\r\n  methods: {\r\n    storage() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.offer.userEmail = this.aux.email;\r\n      }\r\n    },\r\n    getOffer() {\r\n      http\r\n        .get(\"/v1/offer/\" + this.path, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          this.offer.description = response.data.description;\r\n          this.offer.id = response.data.id;\r\n          this.offer.minQuantity = response.data.minQuantity;\r\n          this.offer.presentation = response.data.presentation;\r\n          this.offer.pricePresentation = response.data.pricePresentation;\r\n          this.offer.productName = response.data.productName;\r\n          this.offer.userEmail = response.data.userEmail;\r\n        })\r\n        .catch(e => console.log(e));\r\n    },\r\n    updateOffer() {\r\n      const data = {\r\n        minQuantity: this.offer.minQuantity,\r\n        pricePresentation: this.offer.pricePresentation,\r\n        description: this.offer.description,\r\n        id: this.offer.id\r\n      };\r\n      http\r\n        .put(\"/v1/offer/\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          alert(\"edita\");\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    deleteOffer() {\r\n      http\r\n        .delete(\"v1/offer/del/\" + this.path, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          alert(\"elimina\");\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      location.reload(true);\r\n    }\r\n  }\r\n};\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/SellerEditMyOffer.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/pages/SellerEditMyOffer.vue	(date 1589405163165)
@@ -179,6 +179,7 @@
   },
   mounted() {
     this.storage();
+    this.getOffer();
   },
   methods: {
     storage() {
@@ -187,10 +188,14 @@
         this.token = this.aux.token;
         this.offer.userEmail = this.aux.email;
       }
+      /*Recupera el ID de una de mis oferta para su edición*/
+      if (localStorage.getItem("offerId")) {
+        this.offer.path = localStorage.getItem("offerId");
+      }
     },
     getOffer() {
       http
-        .get("/v1/offer/" + this.path, {
+        .get("/v1/offer/" + this.offer.path, {
           headers: {
             Authorization: `Bearer ${this.token}`
           },
@@ -228,6 +233,7 @@
         .catch(e => {
           console.log(e);
         });
+      localStorage.removeItem("offerId");
     },
 
     deleteOffer() {
Index: src/pages/BuyerEditMyOrder.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div\r\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-60\"\r\n      >\r\n        <md-card>\r\n          <md-card-content>\r\n            <md-field>\r\n              <label for=\"path\">Id de la orden a ver</label><br />\r\n              <md-input v-model=\"product.path\"></md-input>\r\n            </md-field>\r\n            <div class=\"md-layout-item md-size-100 text-center\">\r\n              <md-button\r\n                v-on:click=\"leerAPI\"\r\n                type=\"submit\"\r\n                class=\"md-raised md-success\"\r\n              >\r\n                Ingresar\r\n              </md-button>\r\n            </div>\r\n          </md-card-content>\r\n        </md-card>\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h4 class=\"title\">Edita tu solicitud</h4>\r\n            <p class=\"category\">\r\n              Información necesaria para la edición de una solicitud\r\n            </p>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <div id=\"product\">\r\n              <div class=\"product\">\r\n                <div class=\"md-layout-item md-size-100 md-size-50\">\r\n                  <h1 class=\"title\">{{ product.name }}</h1>\r\n                  <p class=\"category\">De: {{ product.user }}</p>\r\n                  <h3 class=\"title\">\r\n                    {{ product.numberOfUnits }}\r\n                    <span v-if=\"product.presentation === 1\">\r\n                      Gramos pedidos.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 2\">\r\n                      Libras pedidas.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 3\">\r\n                      Kilogramos pedidos.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 4\">\r\n                      Arrobas pedidas.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 5\">\r\n                      Bultos pedidos.\r\n                    </span>\r\n                  </h3>\r\n                  <h4 class=\"title\">Precio por unidad: {{ product.price }}</h4>\r\n                  <h4 class=\"title\">\r\n                    Precio total final: {{ product.totalPrice }}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h2 class=\"title\">Descripción</h2>\r\n            <div class=\"md-layout-item md-size-100 md-size-33\">\r\n              <p class=\"category\">\r\n                {{ product.description }}\r\n              </p>\r\n            </div>\r\n            <div class=\"md-layout-item md-size-100 md-size-33\">\r\n              <p class=\"category\">\r\n                Estado actual de la orden: {{ product.state }}\r\n              </p>\r\n            </div>\r\n            <div class=\"md-layout-item md-size-100 text-right\">\r\n              <md-button class=\"md-raised md-success\" v-on:click=\"cancelOrder\">\r\n                <md-icon>cancel</md-icon> cancelar producto\r\n              </md-button>\r\n            </div>\r\n          </md-card-content>\r\n        </md-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../http-common\";\r\n\r\nexport default {\r\n  name: \"product\",\r\n  data() {\r\n    return {\r\n      product: {\r\n        //orden\r\n        offerReference: \"\",\r\n        user: \"\",\r\n        quantity: 0,\r\n        numberOfUnits: 0,\r\n        totalPrice: 0,\r\n        description: \"\",\r\n        id: \"\",\r\n        presentation: \"\",\r\n\r\n        state: 0,\r\n        canceled: false,\r\n\r\n        //oferta\r\n        price: 0,\r\n        name: \"\",\r\n        //unused\r\n        path: \"\"\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.storage();\r\n    this.leerAPI();\r\n  },\r\n  methods: {\r\n    storage() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.product.userEmail = this.aux.email;\r\n      }\r\n      if(localStorage.getItem(\"buyerOrderId1\")){\r\n        this.product.path = localStorage.getItem(\"buyerOrderId1\");\r\n      }\r\n    },\r\n    leerAPI() {\r\n      http.get(\r\n        '/v1/order/' + this.product.path,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          this.product.offerReference = response.data.offerReference;\r\n          this.product.id = response.data.id;\r\n          this.product.user = response.data.userEmail;\r\n          this.product.presentation = response.data.unit;\r\n          this.product.numberOfUnits = response.data.numberOfUnits;\r\n          this.product.totalPrice = response.data.totalPrice;\r\n          this.product.description = response.data.description;\r\n          this.product.state = response.data.state;\r\n          http.get(\r\n            '/v1/offer/' + response.data.offerReference,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${this.token}`\r\n              },\r\n              withCredentials: false\r\n            })\r\n            .then(response => {\r\n              this.product.name = response.data.productName;\r\n              this.product.price = response.data.pricePresentation;\r\n            })\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    cancelOrder() {\r\n      const data = {\r\n        canceled: this.product.canceled,\r\n        orderId: this.product.id\r\n      };\r\n\r\n      http\r\n        .put(\"/v1/order/buyer\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.md-steppers {\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/BuyerEditMyOrder.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/pages/BuyerEditMyOrder.vue	(date 1589404979297)
@@ -122,14 +122,13 @@
         this.token = this.aux.token;
         this.product.userEmail = this.aux.email;
       }
-      if(localStorage.getItem("buyerOrderId1")){
+      if (localStorage.getItem("buyerOrderId1")) {
         this.product.path = localStorage.getItem("buyerOrderId1");
       }
     },
     leerAPI() {
-      http.get(
-        '/v1/order/' + this.product.path,
-        {
+      http
+        .get("/v1/order/" + this.product.path, {
           headers: {
             Authorization: `Bearer ${this.token}`
           },
@@ -144,9 +143,8 @@
           this.product.totalPrice = response.data.totalPrice;
           this.product.description = response.data.description;
           this.product.state = response.data.state;
-          http.get(
-            '/v1/offer/' + response.data.offerReference,
-            {
+          http
+            .get("/v1/offer/" + response.data.offerReference, {
               headers: {
                 Authorization: `Bearer ${this.token}`
               },
@@ -156,6 +154,9 @@
               this.product.name = response.data.productName;
               this.product.price = response.data.pricePresentation;
             })
+            .catch(e => {
+              console.log(e);
+            });
         })
         .catch(e => {
           console.log(e);
@@ -180,6 +181,7 @@
         .catch(e => {
           console.log(e);
         });
+      localStorage.removeItem("buyerOrderId1");
     }
   }
 };
Index: src/pages/SellerEditMyOrder.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div\r\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-60\"\r\n      >\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h1>Ingresa La orden a ver</h1>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <md-field>\r\n              <label for=\"path\">Id de la orden a ver:</label> <br />\r\n              <md-input v-model=\"product.path\" placeholder=\"path\"></md-input>\r\n            </md-field>\r\n            <md-button\r\n              v-on:click=\"leerAPI\"\r\n              type=\"submit\"\r\n              class=\"md-raised md-success\"\r\n            >\r\n              Ingresar\r\n            </md-button>\r\n          </md-card-content>\r\n        </md-card>\r\n        <md-card>\r\n          <md-card-header data-background-color=\"green\">\r\n            <h1 class=\"title\">{{ product.name }}</h1>\r\n            <p class=\"category\">De: {{ product.user }}</p>\r\n          </md-card-header>\r\n          <md-card-content>\r\n            <div id=\"product\">\r\n              <div class=\"product\">\r\n                <div class=\"md-layout-item md-size-100 md-size-33\">\r\n                  <h3 class=\"title\">\r\n                    {{ product.numberOfUnits }}\r\n                    <span v-if=\"product.presentation === 1\">\r\n                      Gramos pedidos.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 2\">\r\n                      Libras pedidas.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 3\">\r\n                      Kilogramos pedidos.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 4\">\r\n                      Arrobas pedidas.\r\n                    </span>\r\n                    <span v-if=\"product.presentation === 5\">\r\n                      Bultos pedidos.\r\n                    </span>\r\n                  </h3>\r\n                  <h4 class=\"title\">Precio por unidad: {{ product.price }}</h4>\r\n                  <h4 class=\"title\">\r\n                    Precio total final: {{ product.totalPrice }}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h2 class=\"title\">Descripción</h2>\r\n            <div class=\"md-layout-item md-size-100 md-size-33\">\r\n              <p class=\"category\">\r\n                {{ product.description }}\r\n              </p>\r\n            </div>\r\n            <div class=\"md-layout-item md-size-100 md-size-33\">\r\n              <p class=\"category\">\r\n                Estado actual de la orden: {{ product.state }}\r\n              </p>\r\n            </div>\r\n            <div class=\"md-layout-item md-size-100 text-left\">\r\n              <md-button class=\"md-raised md-success\" v-on:click=\"cancelOrder\">\r\n                cancelar producto\r\n              </md-button>\r\n            </div>\r\n            <div class=\"md-layout-item md-size-100 text-right\">\r\n              <md-button class=\"md-raised md-success\" v-on:click=\"updateOrder\">\r\n                Actualizar estado\r\n              </md-button>\r\n            </div>\r\n          </md-card-content>\r\n        </md-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../http-common\";\r\n\r\nexport default {\r\n  name: \"product\",\r\n  data() {\r\n    return {\r\n      product: {\r\n        //orden\r\n        offerReference: \"\",\r\n        user: \"\",\r\n        quantity: 0,\r\n        numberOfUnits: 0,\r\n        totalPrice: 0,\r\n        description: \"\",\r\n        id: \"\",\r\n        presentation: \"\",\r\n\r\n        state: 0,\r\n        canceled: true,\r\n\r\n        //oferta\r\n        price: 0,\r\n        name: \"\",\r\n        userEmail: \"\",\r\n        //\r\n        path: \"\"\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.storage();\r\n    this.leerAPI();\r\n  },\r\n  methods: {\r\n    storage() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.product.userEmail = this.aux.email;\r\n      }\r\n    },\r\n    leerAPI() {\r\n      http\r\n        .get(\"/v1/order/\" + this.product.path, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          this.product.offerReference = response.data.offerReference;\r\n          this.product.id = response.data.id;\r\n          this.product.user = response.data.userEmail;\r\n          this.product.presentation = response.data.unit;\r\n          this.product.numberOfUnits = response.data.numberOfUnits;\r\n          this.product.totalPrice = response.data.totalPrice;\r\n          this.product.description = response.data.description;\r\n          this.product.state = response.data.state;\r\n          http\r\n            .get(\"/v1/offer/\" + response.data.offerReference, {\r\n              headers: {\r\n                Authorization: `Bearer ${this.token}`\r\n              },\r\n              withCredentials: false\r\n            })\r\n            .then(response => {\r\n              this.product.name = response.data.productName;\r\n              this.product.price = response.data.pricePresentation;\r\n            });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    cancelOrder() {\r\n      const data = {\r\n        canceled: (this.product.canceled = false),\r\n        orderId: this.product.id\r\n      };\r\n\r\n      http\r\n        .put(\"/v1/order/seller\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n\r\n      this.submitted = true;\r\n    },\r\n    updateOrder() {\r\n      const data = {\r\n        canceled: (this.product.canceled = true),\r\n        orderId: this.product.id\r\n      };\r\n\r\n      http\r\n        .put(\"/v1/order/seller\", data, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          alert(\"envia\");\r\n\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n\r\n      this.submitted = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.md-steppers {\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/SellerEditMyOrder.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/pages/SellerEditMyOrder.vue	(date 1589402367964)
@@ -125,6 +125,9 @@
         this.token = this.aux.token;
         this.product.userEmail = this.aux.email;
       }
+      if (localStorage.getItem("offerReference")) {
+        this.product.path = localStorage.getItem("offerReference");
+      }
     },
     leerAPI() {
       http
@@ -180,6 +183,7 @@
         });
 
       this.submitted = true;
+      localStorage.removeItem("offerReference");
     },
     updateOrder() {
       const data = {
Index: src/pages/SellerListMyOrders.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"content\">\r\n    <div class=\"md-layout\">\r\n      <div\r\n        class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-60\"\r\n      >\r\n        <md-list\r\n          class=\"md-double-line  md-elevation-24\"\r\n          v-for=\"(offer, index) in offers\"\r\n          v-bind:key=\"index\"\r\n        >\r\n          <md-subheader>\r\n            ID de la oferta relacionada {{ offer.offerReference }}\r\n          </md-subheader>\r\n          <md-divider></md-divider>\r\n          <md-list-item>\r\n            <md-icon class=\"md-primary md-size-2x\">storefront</md-icon>\r\n            <div class=\"md-list-item-text\">\r\n              <span>Oferta hecha por: {{ offer.userEmail }}</span>\r\n              <span v-if=\"offer.state === 1\">Estado: Por aceptar</span>\r\n              <span v-if=\"offer.state === 2\">Estado: Aceptada</span>\r\n              <span v-if=\"offer.state === 3\">Estado: En camino</span>\r\n            </div>\r\n          </md-list-item>\r\n\r\n          <md-list-item class=\"md-inset md-expand\">\r\n            <div class=\"md-list-item-text\">\r\n              <span>{{ offer.description }}</span>\r\n            </div>\r\n            <md-button class=\"md-primary md-icon-button md-list-action\">\r\n              <md-icon>shopping_cart</md-icon>\r\n            </md-button>\r\n          </md-list-item>\r\n        </md-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"DoubleLine\",\r\n  data() {\r\n    return {\r\n      userEmail: \"\",\r\n      offers: null,\r\n      order: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.storage();\r\n    this.getOffers();\r\n  },\r\n  methods: {\r\n    storage() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.userEmail = this.aux.email;\r\n      }\r\n    },\r\n    getOffers() {\r\n      console.log(\"metodo get offers\");\r\n      axios\r\n        .get(\"http://localhost:8080/api/v1/order/seller/\" + this.userEmail, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          console.log(response);\r\n          this.offers = response.data;\r\n          /*axios.get('http://localhost:8080/api/v1/offer/'+ response.data.offerReference)\r\n                  .then(response =>{\r\n\r\n                    alert(response.data.offerReference)\r\n                    console.log(response);\r\n                    this.order=response.data\r\n                  })*/\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.md-list {\r\n  width: 640px;\r\n  max-width: 100%;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  border: 1px solid rgba(#0000, 0.12);\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/pages/SellerListMyOrders.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/pages/SellerListMyOrders.vue	(date 1589402151826)
@@ -27,9 +27,15 @@
             <div class="md-list-item-text">
               <span>{{ offer.description }}</span>
             </div>
-            <md-button class="md-primary md-icon-button md-list-action">
-              <md-icon>shopping_cart</md-icon>
-            </md-button>
+            <router-link to="/SellerEditMyOrder" class="text-white">
+              <md-button
+                class="md-primary md-icon-button md-list-action"
+                :value="offer.offerReference"
+                @click="addIdOfferReference(offer.offerReference)"
+              >
+                <md-icon>create</md-icon>
+              </md-button>
+            </router-link>
           </md-list-item>
         </md-list>
       </div>
@@ -82,6 +88,11 @@
                   })*/
         })
         .catch(e => console.log(e));
+    },
+    addIdOfferReference: function(Id) {
+      let IdAux = Id;
+      alert(IdAux);
+      localStorage.setItem("offerReference", IdAux);
     }
   }
 };
Index: .idea/dictionaries/HOGAR.xml
===================================================================
--- .idea/dictionaries/HOGAR.xml	(date 1589404279330)
+++ .idea/dictionaries/HOGAR.xml	(date 1589404279330)
@@ -0,0 +1,12 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="HOGAR">
+    <words>
+      <w>compra</w>
+      <w>edición</w>
+      <w>oferta</w>
+      <w>realizar</w>
+      <w>recupera</w>
+      <w>solicitud</w>
+    </words>
+  </dictionary>
+</component>
\ No newline at end of file
Index: src/components/Tables/SellerListMyOffersTable.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div>\r\n    <md-table v-model=\"sellerOffers\" :table-header-color=\"tableHeaderColor\">\r\n      <md-table-row>\r\n        <md-table-head>Producto</md-table-head>\r\n        <md-table-head>Presentación</md-table-head>\r\n        <md-table-head>Cantidad mínima</md-table-head>\r\n        <md-table-head>Precio por presentación</md-table-head>\r\n        <!--<md-table-head>Acciones</md-table-head>-->\r\n      </md-table-row>\r\n      <md-table-row\r\n        slot=\"md-table-row\"\r\n        v-for=\"(sellerOffer, index) in sellerOffers\"\r\n        v-bind:key=\"index\"\r\n      >\r\n        <md-table-cell md-label=\"Producto\">\r\n          {{ sellerOffer.productName }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Presentación\">\r\n          {{ sellerOffer.presentation }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Cantidad mínima\">\r\n          {{ sellerOffer.minQuantity }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Precio por unidad\">\r\n          $ {{ sellerOffer.pricePresentation }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Acciones\">\r\n          <md-button class=\"md-raised md-success\" :value=\"sellerOffer.id\">\r\n            <md-icon>create</md-icon>\r\n          </md-button>\r\n        </md-table-cell>\r\n      </md-table-row>\r\n    </md-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"simple-table\",\r\n  props: {\r\n    tableHeaderColor: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      sellerOffers: null,\r\n      email: \"\",\r\n      aux: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.storage();\r\n    this.getSellerOffers();\r\n  },\r\n  methods: {\r\n    storage() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.email = this.aux.email;\r\n      }\r\n    },\r\n    getSellerOffers() {\r\n      console.log(\"Get Seller Offers\");\r\n      axios\r\n        .get(\"http://localhost:8080/api/v1/offer/user/\" + this.email, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          this.sellerOffers = response.data;\r\n        })\r\n        .catch(e => console.log(e));\r\n    }\r\n  }\r\n};\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/Tables/SellerListMyOffersTable.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/components/Tables/SellerListMyOffersTable.vue	(date 1589403207865)
@@ -26,9 +26,15 @@
           $ {{ sellerOffer.pricePresentation }}
         </md-table-cell>
         <md-table-cell md-label="Acciones">
-          <md-button class="md-raised md-success" :value="sellerOffer.id">
-            <md-icon>create</md-icon>
-          </md-button>
+          <router-link to="/SellerEditMyOffer" class="text-white">
+            <md-button
+              :value="sellerOffer.id"
+              @click="addIdMyOffer(sellerOffer.id)"
+              class="md-raised md-success"
+            >
+              <md-icon>create</md-icon>
+            </md-button>
+          </router-link>
         </md-table-cell>
       </md-table-row>
     </md-table>
@@ -78,6 +84,11 @@
           this.sellerOffers = response.data;
         })
         .catch(e => console.log(e));
+    },
+    addIdMyOffer: function(Id) {
+      let IdAux = Id;
+      alert(IdAux);
+      localStorage.setItem("offerId", IdAux);
     }
   }
 };
Index: src/components/Tables/BuyerListMyOrdersTable.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div>\r\n    <md-table v-model=\"buyerOrders\" :table-header-color=\"tableHeaderColor\">\r\n      <md-table-row>\r\n        <md-table-head>Oferta</md-table-head>\r\n        <md-table-head>Unidad</md-table-head>\r\n        <md-table-head>Número de unidades</md-table-head>\r\n        <md-table-head>Precio total</md-table-head>\r\n      </md-table-row>\r\n      <md-table-row\r\n        slot=\"md-table-row\"\r\n        v-for=\"(buyerOrder, index) in buyerOrders\"\r\n        v-bind:key=\"index\"\r\n      >\r\n        <md-table-cell md-label=\"Producto\">\r\n          {{ buyerOrder.offerReference }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Unidad\">\r\n          {{ buyerOrder.unit }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Cantidad minima\">\r\n          {{ buyerOrder.numberOfUnits }}\r\n        </md-table-cell>\r\n        <md-table-cell md-label=\"Precio por unidad\">\r\n          $ {{ buyerOrder.totalPrice }}\r\n        </md-table-cell>\r\n        <router-link to=\"/BuyerBuyProduct\" class=\"text-white\">\r\n          <md-button class=\"md-raised md-success\" :value=\"buyerOrder.id\"  @click=\"addIdBuyerOrder(buyerOrder.id)\">\r\n            <md-icon>create</md-icon>\r\n          </md-button>\r\n        </router-link>\r\n      </md-table-row>\r\n    </md-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"simple-table\",\r\n  props: {\r\n    tableHeaderColor: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      buyerOrders: null,\r\n      email: \"\",\r\n      aux: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getBuyerOrders();\r\n  },\r\n  methods: {\r\n    getBuyerOrders() {\r\n      if (localStorage.getItem(\"userSession\")) {\r\n        this.aux = JSON.parse(localStorage.getItem(\"userSession\"));\r\n        this.token = this.aux.token;\r\n        this.email = this.aux.email;\r\n      }\r\n      console.log(\"Get Buyer Orders\");\r\n      axios\r\n        .get(\"http://localhost:8080/api/v1/order/user/\" + this.email, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`\r\n          },\r\n          withCredentials: false\r\n        })\r\n        .then(response => {\r\n          this.buyerOrders = response.data;\r\n        })\r\n        .catch(e => console.log(e));\r\n    },\r\n    addIdBuyerOrder: function(Id){\r\n      let IdAux =Id;\r\n      alert(IdAux);\r\n      localStorage.setItem(\"buyerOrderId1\", IdAux);\r\n    }\r\n  }\r\n};\r\n</script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/Tables/BuyerListMyOrdersTable.vue	(revision f3985c7f4d447dd2c179abf0b616e46fd2a86d52)
+++ src/components/Tables/BuyerListMyOrdersTable.vue	(date 1589403029719)
@@ -24,7 +24,7 @@
         <md-table-cell md-label="Precio por unidad">
           $ {{ buyerOrder.totalPrice }}
         </md-table-cell>
-        <router-link to="/BuyerBuyProduct" class="text-white">
+        <router-link to="/BuyerEditMyOrder" class="text-white">
           <md-button class="md-raised md-success" :value="buyerOrder.id"  @click="addIdBuyerOrder(buyerOrder.id)">
             <md-icon>create</md-icon>
           </md-button>
